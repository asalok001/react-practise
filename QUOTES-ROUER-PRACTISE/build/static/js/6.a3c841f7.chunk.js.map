{"version":3,"sources":["components/UI/Card.module.css","components/quotes/QuoteForm.module.css","components/UI/Card.js","components/quotes/QuoteForm.js","pages/AddQuote.js"],"names":["module","exports","Card","props","className","classes","card","children","QuoteForm","useState","isEntering","setISEntering","authorInputRef","useRef","textInputRef","when","message","location","onFocus","console","log","form","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","author","text","isLoading","loading","LoadingSpinner","control","htmlFor","type","id","ref","rows","actions","onClick","AddQuote","useHttp","addQuote","sendRequest","status","history","useHistory","useEffect","push","quoteData"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,KAAO,qB,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,2BAA2B,QAAU,2BAA2B,QAAU,6B,yFCKtHC,EAJF,SAACC,GACZ,OAAO,qBAAKC,UAAWC,IAAQC,KAAxB,SAA+BH,EAAMI,Y,yBC4D/BC,EAxDG,SAACL,GACjB,MAAoCM,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAEMC,EAAiBC,mBACjBC,EAAeD,mBAwBrB,OACE,eAAC,WAAD,WACE,cAAC,IAAD,CAAQE,KAAML,EAAYM,QAAS,SAACC,GAAD,MAAc,4BACjD,cAAC,EAAD,UACE,uBAAMC,QAVS,WAEnBP,GAAc,GACdQ,QAAQC,IAAI,UAOqBhB,UAAWC,IAAQgB,KAAMC,SA1B5D,SAA2BC,GACzBA,EAAMC,iBAEN,IAAMC,EAAgBb,EAAec,QAAQC,MACvCC,EAAcd,EAAaY,QAAQC,MAKzCxB,EAAM0B,WAAW,CAAEC,OAAQL,EAAeM,KAAMH,KAiB5C,UACGzB,EAAM6B,WACL,qBAAK5B,UAAWC,IAAQ4B,QAAxB,SACE,cAACC,EAAA,EAAD,MAIJ,sBAAK9B,UAAWC,IAAQ8B,QAAxB,UACE,uBAAOC,QAAQ,SAAf,oBACA,uBAAOC,KAAK,OAAOC,GAAG,SAASC,IAAK3B,OAEtC,sBAAKR,UAAWC,IAAQ8B,QAAxB,UACE,uBAAOC,QAAQ,OAAf,kBACA,0BAAUE,GAAG,OAAOE,KAAK,IAAID,IAAKzB,OAEpC,qBAAKV,UAAWC,IAAQoC,QAAxB,SACE,wBAAQC,QA9BQ,WACxB/B,GAAc,IA6B8BP,UAAU,MAA9C,kC,gBC3BGuC,UAtBE,WACb,MAAgCC,YAAQC,KAAhCC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,OAEfC,EAAUC,cAEhBC,qBACI,WACmB,cAAXH,GACAC,EAAQG,KAAK,YAGrB,CAACJ,EAAQC,IAOb,OACI,cAAC,EAAD,CAAWhB,UAAsB,YAAXe,EAAsBlB,WALxB,SAAAuB,GACpBN,EAAYM","file":"static/js/6.a3c841f7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__VAFR6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__2zEPO\",\"loading\":\"QuoteForm_loading__5DFBD\",\"control\":\"QuoteForm_control__1SSZb\",\"actions\":\"QuoteForm_actions__3n2em\"};","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import { Fragment, useRef, useState } from 'react';\nimport { Prompt } from 'react-router-dom';\n\nimport Card from '../UI/Card';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './QuoteForm.module.css';\n\nconst QuoteForm = (props) => {\n  const [isEntering, setISEntering] = useState(false);\n\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n    // setISEntering(true);\n    // console.log();\n    // optional: Could validate here\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  };\n\n  const finishFormHandler = () => {\n    setISEntering(false);\n  };\n\n  const focusHandler = () => {\n\n    setISEntering(true);\n    console.log(\"focus\");\n  };\n\n  return (\n    <Fragment>\n      <Prompt when={isEntering} message={(location) => 'Do you want to go back'} />\n      <Card>\n        <form onFocus={focusHandler} className={classes.form} onSubmit={submitFormHandler}>\n          {props.isLoading && (\n            <div className={classes.loading}>\n              <LoadingSpinner />\n            </div>\n          )}\n\n          <div className={classes.control}>\n            <label htmlFor='author'>Author</label>\n            <input type='text' id='author' ref={authorInputRef} />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor='text'>Text</label>\n            <textarea id='text' rows='5' ref={textInputRef}></textarea>\n          </div>\n          <div className={classes.actions}>\n            <button onClick={finishFormHandler} className='btn'>Add Quote</button>\n          </div>\n        </form>\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default QuoteForm;\n","import { useHistory } from 'react-router-dom';\r\nimport QuoteForm from '../components/quotes/QuoteForm';\r\nimport { useEffect, useState } from 'react';\r\nimport useHttp from '../hooks/use-http';\r\nimport { addQuote } from '../lib/api';\r\n\r\nconst AddQuote = () => {\r\n    const { sendRequest, status } = useHttp(addQuote);\r\n\r\n    const history = useHistory();\r\n\r\n    useEffect(\r\n        () => {\r\n            if (status === 'completed') {\r\n                history.push('/quote');\r\n            }\r\n        },\r\n        [status, history]\r\n    );\r\n\r\n    const addQuoteHandler = quoteData => {\r\n        sendRequest(quoteData);\r\n    };\r\n\r\n    return (\r\n        <QuoteForm isLoading={status === 'pending'} onAddQuote={addQuoteHandler} />\r\n    );\r\n};\r\nexport default AddQuote;\r\n"],"sourceRoot":""}